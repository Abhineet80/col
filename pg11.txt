#include<stdio.h>
 #include<stdlib.h> 
 int a[20][20],q[20],reach[20],visited[20],n,f=0,r=-1,count=0; 
void bfs(); 
void dfs(); 


 void bfs(int v){ 
 int i; 
 for(i=1;i<=n;i++)  
 if(a[v][i]&& !visited[i]){  
 visited[i]=1; 
 q[++r]=i; 
 }  if(f<=r){  
 bfs(q[f++]); 
 } } 
  
 void dfs(int v){  
 int i; 
 reach[v]=1; 
 for(i=1;i<=n;i++)  
 if(a[v][i]&& !reach[i]){  
 printf("%d->%d\n",v,i); 
 count++; 
 dfs(i); 
 } } 
 
int main(){  
int ch,i,v,j; 
 printf("Enter the number of vertex:"); 
 scanf("%d",&n); 
 
 for(i=1;i<=n;i++){  
    visited[i]=q[i]=0; 
 }  

 for(i=1;i<=n-1;i++) 
  reach[i]=0;

 printf("Enter Graph data in matrix form:\n"); 
 for(i=1;i<=n;i++)  
 for(j=1;j<=n;j++) 
 scanf("%d",&a[i][j]); 

 printf("\n1.BFS\n2.DFS\n3.EXIT\nEnter the choice:"); 
 scanf("%d",&ch); 
 switch(ch){

 case 1: printf("Enter the vertex:"); 
 scanf("%d",&v); 
 bfs(v); 
 printf("the nodes reachable from %d is:",v); 
 for(i=1;i<=n;i++)  
 if(visited[i])  
 printf("%d\n",i); 
 break; 

 case 2: dfs(1); 
 if(count==ch-1)  
 printf("Graph is connected"); 
 else  
 printf("Graph is not connected"); 
 break; 

  case 3: exit(0); break;
  
 default: 
 printf("Invalid choice"); 
 break; 

 }  
 return 0; 
}
